{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kalth\\\\OneDrive\\\\Desktop\\\\clothing brand\\\\FRONTEND\\\\src\\\\Context\\\\ShopContext.jsx\",\n  _s = $RefreshSig$();\n// FRONTEND/src/Context/ShopContext.jsx\nimport all_product from \"../Components/Assets/all_product\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ShopContext = createContext(null);\nconst getDefaultCart = () => {\n  let cart = {};\n  for (let index = 0; index < all_product.length + 1; index++) {\n    cart[index] = 0;\n  }\n  return cart;\n};\nconst ShopContextProvider = props => {\n  _s();\n  const [cartItems, setCartItems] = useState(() => {\n    const savedCart = localStorage.getItem('cartItems');\n    return savedCart ? JSON.parse(savedCart) : getDefaultCart();\n  });\n\n  // Update localStorage whenever cartItems change\n  useEffect(() => {\n    localStorage.setItem('cartItems', JSON.stringify(cartItems));\n  }, [cartItems]);\n\n  // Fetch the user's cart from the server if they are logged in\n  useEffect(() => {\n    const fetchUserCart = async () => {\n      const token = localStorage.getItem('auth-token');\n      if (token) {\n        try {\n          const response = await axios.get('http://localhost:5000/auth/user', {\n            headers: {\n              'Authorization': `Bearer ${token}`\n            }\n          });\n          if (response.data.cart) {\n            setCartItems(response.data.cart);\n          }\n        } catch (error) {\n          console.error('Error fetching user cart:', error);\n        }\n      }\n    };\n    fetchUserCart();\n  }, []);\n  const addToCart = itemId => {\n    setCartItems(prev => ({\n      ...prev,\n      [itemId]: prev[itemId] + 1\n    }));\n  };\n  const removeFromCart = itemId => {\n    setCartItems(prev => ({\n      ...prev,\n      [itemId]: prev[itemId] - 1\n    }));\n  };\n  const getTotalCartAmount = () => {\n    let totalAmount = 0;\n    for (const item in cartItems) {\n      if (cartItems[item] > 0) {\n        let itemInfo = all_product.find(product => product.id === Number(item));\n        totalAmount += cartItems[item] * itemInfo.new_price;\n      }\n    }\n    return totalAmount;\n  };\n  const getTotalCartItems = () => {\n    let totalItem = 0;\n    for (const item in cartItems) {\n      if (cartItems[item] > 0) {\n        totalItem += cartItems[item];\n      }\n    }\n    return totalItem;\n  };\n  const resetCart = () => {\n    const defaultCart = getDefaultCart();\n    setCartItems(defaultCart);\n    localStorage.setItem('cartItems', JSON.stringify(defaultCart));\n  };\n  const saveCartToServer = async () => {\n    const token = localStorage.getItem('auth-token');\n    if (token) {\n      try {\n        await axios.put('http://localhost:5000/auth/update-cart', {\n          cart: cartItems\n        }, {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n      } catch (error) {\n        console.error('Error saving cart to server:', error);\n      }\n    }\n  };\n  const handleLogout = async () => {\n    await saveCartToServer();\n    resetCart(); // Reset cart locally\n    localStorage.removeItem('auth-token'); // Clear auth token on logout\n  };\n  const contextValue = {\n    getTotalCartItems,\n    getTotalCartAmount,\n    all_product,\n    cartItems,\n    addToCart,\n    removeFromCart,\n    resetCart,\n    handleLogout\n  };\n  return /*#__PURE__*/_jsxDEV(ShopContext.Provider, {\n    value: contextValue,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 9\n  }, this);\n};\n_s(ShopContextProvider, \"z7JwuiARzL5gmE1n48zbiBMd4dM=\");\n_c = ShopContextProvider;\nexport default ShopContextProvider;\nvar _c;\n$RefreshReg$(_c, \"ShopContextProvider\");","map":{"version":3,"names":["all_product","axios","jsxDEV","_jsxDEV","ShopContext","createContext","getDefaultCart","cart","index","length","ShopContextProvider","props","_s","cartItems","setCartItems","useState","savedCart","localStorage","getItem","JSON","parse","useEffect","setItem","stringify","fetchUserCart","token","response","get","headers","data","error","console","addToCart","itemId","prev","removeFromCart","getTotalCartAmount","totalAmount","item","itemInfo","find","product","id","Number","new_price","getTotalCartItems","totalItem","resetCart","defaultCart","saveCartToServer","put","handleLogout","removeItem","contextValue","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/kalth/OneDrive/Desktop/clothing brand/FRONTEND/src/Context/ShopContext.jsx"],"sourcesContent":["// FRONTEND/src/Context/ShopContext.jsx\r\nimport all_product from \"../Components/Assets/all_product\";\r\nimport axios from 'axios';\r\n\r\nexport const ShopContext = createContext(null);\r\n\r\nconst getDefaultCart = () => {\r\n    let cart = {};\r\n    for (let index = 0; index < all_product.length + 1; index++) {\r\n        cart[index] = 0;\r\n    }\r\n    return cart;\r\n};\r\n\r\nconst ShopContextProvider = (props) => {\r\n    const [cartItems, setCartItems] = useState(() => {\r\n        const savedCart = localStorage.getItem('cartItems');\r\n        return savedCart ? JSON.parse(savedCart) : getDefaultCart();\r\n    });\r\n\r\n    // Update localStorage whenever cartItems change\r\n    useEffect(() => {\r\n        localStorage.setItem('cartItems', JSON.stringify(cartItems));\r\n    }, [cartItems]);\r\n\r\n    // Fetch the user's cart from the server if they are logged in\r\n    useEffect(() => {\r\n        const fetchUserCart = async () => {\r\n            const token = localStorage.getItem('auth-token');\r\n            if (token) {\r\n                try {\r\n                    const response = await axios.get('http://localhost:5000/auth/user', {\r\n                        headers: { 'Authorization': `Bearer ${token}` },\r\n                    });\r\n                    if (response.data.cart) {\r\n                        setCartItems(response.data.cart);\r\n                    }\r\n                } catch (error) {\r\n                    console.error('Error fetching user cart:', error);\r\n                }\r\n            }\r\n        };\r\n\r\n        fetchUserCart();\r\n    }, []);\r\n\r\n    const addToCart = (itemId) => {\r\n        setCartItems((prev) => ({ ...prev, [itemId]: prev[itemId] + 1 }));\r\n    };\r\n\r\n    const removeFromCart = (itemId) => {\r\n        setCartItems((prev) => ({ ...prev, [itemId]: prev[itemId] - 1 }));\r\n    };\r\n\r\n    const getTotalCartAmount = () => {\r\n        let totalAmount = 0;\r\n        for (const item in cartItems) {\r\n            if (cartItems[item] > 0) {\r\n                let itemInfo = all_product.find((product) => product.id === Number(item));\r\n                totalAmount += cartItems[item] * itemInfo.new_price;\r\n            }\r\n        }\r\n        return totalAmount;\r\n    };\r\n\r\n    const getTotalCartItems = () => {\r\n        let totalItem = 0;\r\n        for (const item in cartItems) {\r\n            if (cartItems[item] > 0) {\r\n                totalItem += cartItems[item];\r\n            }\r\n        }\r\n        return totalItem;\r\n    };\r\n\r\n    const resetCart = () => {\r\n        const defaultCart = getDefaultCart();\r\n        setCartItems(defaultCart);\r\n        localStorage.setItem('cartItems', JSON.stringify(defaultCart));\r\n    };\r\n\r\n    const saveCartToServer = async () => {\r\n        const token = localStorage.getItem('auth-token');\r\n        if (token) {\r\n            try {\r\n                await axios.put(\r\n                    'http://localhost:5000/auth/update-cart',\r\n                    { cart: cartItems },\r\n                    { headers: { 'Authorization': `Bearer ${token}` } }\r\n                );\r\n            } catch (error) {\r\n                console.error('Error saving cart to server:', error);\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleLogout = async () => {\r\n        await saveCartToServer();\r\n        resetCart(); // Reset cart locally\r\n        localStorage.removeItem('auth-token'); // Clear auth token on logout\r\n    };\r\n\r\n    const contextValue = {\r\n        getTotalCartItems,\r\n        getTotalCartAmount,\r\n        all_product,\r\n        cartItems,\r\n        addToCart,\r\n        removeFromCart,\r\n        resetCart,\r\n        handleLogout,\r\n    };\r\n\r\n    return (\r\n        <ShopContext.Provider value={contextValue}>\r\n            {props.children}\r\n        </ShopContext.Provider>\r\n    );\r\n};\r\n\r\nexport default ShopContextProvider;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}