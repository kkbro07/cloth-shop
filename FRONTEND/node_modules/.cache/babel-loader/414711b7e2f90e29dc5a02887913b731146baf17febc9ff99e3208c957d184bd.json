{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kalth\\\\OneDrive\\\\Desktop\\\\clothing brand\\\\FRONTEND\\\\src\\\\Components\\\\PrivateRoute.jsx\";\n// FRONTEND/src/Components/PrivateRoute.jsx\nimport React from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PrivateRoute = ({\n  element: Element,\n  ...rest\n}) => {\n  const isAuthenticated = localStorage.getItem('auth-token'); // Check for 'auth-token'\n\n  return isAuthenticated ? /*#__PURE__*/_jsxDEV(Element, {\n    ...rest\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 28\n  }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/login\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 52\n  }, this);\n  const token = localStorage.getItem('auth-token');\n  let isAdmin = false;\n  if (token) {\n    try {\n      const decoded = jwt(token);\n      isAdmin = decoded.role === 'admin';\n    } catch (error) {\n      console.error('JWT decode error:', error);\n    }\n  }\n  return isAdmin ? element : /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/login\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 30\n  }, this);\n};\n_c = PrivateRoute;\nexport default PrivateRoute;\nvar _c;\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"names":["React","Navigate","jsxDEV","_jsxDEV","PrivateRoute","element","Element","rest","isAuthenticated","localStorage","getItem","fileName","_jsxFileName","lineNumber","columnNumber","to","token","isAdmin","decoded","jwt","role","error","console","_c","$RefreshReg$"],"sources":["C:/Users/kalth/OneDrive/Desktop/clothing brand/FRONTEND/src/Components/PrivateRoute.jsx"],"sourcesContent":["// FRONTEND/src/Components/PrivateRoute.jsx\r\nimport React from 'react';\r\nimport { Navigate } from 'react-router-dom';\r\n\r\nconst PrivateRoute = ({ element: Element, ...rest }) => {\r\n  const isAuthenticated = localStorage.getItem('auth-token'); // Check for 'auth-token'\r\n\r\n  return isAuthenticated ? <Element {...rest} /> : <Navigate to=\"/login\" />;\r\n\r\n  const token = localStorage.getItem('auth-token');\r\n  let isAdmin = false;\r\n\r\n  if (token) {\r\n    try {\r\n      const decoded = jwt(token);\r\n      isAdmin = decoded.role === 'admin';\r\n    } catch (error) {\r\n      console.error('JWT decode error:', error);\r\n    }\r\n  }\r\n\r\n  return isAdmin ? element : <Navigate to=\"/login\" />;\r\n};\r\n\r\n\r\nexport default PrivateRoute;\r\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,YAAY,GAAGA,CAAC;EAAEC,OAAO,EAAEC,OAAO;EAAE,GAAGC;AAAK,CAAC,KAAK;EACtD,MAAMC,eAAe,GAAGC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC;;EAE5D,OAAOF,eAAe,gBAAGL,OAAA,CAACG,OAAO;IAAA,GAAKC;EAAI;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC,gBAAGX,OAAA,CAACF,QAAQ;IAACc,EAAE,EAAC;EAAQ;IAAAJ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;EAEzE,MAAME,KAAK,GAAGP,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC;EAChD,IAAIO,OAAO,GAAG,KAAK;EAEnB,IAAID,KAAK,EAAE;IACT,IAAI;MACF,MAAME,OAAO,GAAGC,GAAG,CAACH,KAAK,CAAC;MAC1BC,OAAO,GAAGC,OAAO,CAACE,IAAI,KAAK,OAAO;IACpC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAAC;IAC3C;EACF;EAEA,OAAOJ,OAAO,GAAGZ,OAAO,gBAAGF,OAAA,CAACF,QAAQ;IAACc,EAAE,EAAC;EAAQ;IAAAJ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACrD,CAAC;AAACS,EAAA,GAlBInB,YAAY;AAqBlB,eAAeA,YAAY;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}