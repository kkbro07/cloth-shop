{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kalth\\\\OneDrive\\\\Desktop\\\\clothing brand\\\\FRONTEND\\\\src\\\\Components\\\\account\\\\ResetPassword\\\\ResetPassword.jsx\",\n  _s = $RefreshSig$();\n// src/Components/account/ResetPassword/ResetPassword.jsx\n\nimport React, { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResetPassword = () => {\n  _s();\n  const [token, setToken] = useState('');\n  const [newPassword, setNewPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [error, setError] = useState(null);\n  const [searchParams] = useSearchParams();\n  useEffect(() => {\n    const tokenFromURL = searchParams.get('token');\n    if (tokenFromURL) {\n      setToken(tokenFromURL);\n    }\n  }, [searchParams]);\n  const handlePasswordReset = () => {\n    if (newPassword !== confirmPassword) {\n      setError('Passwords do not match');\n      return;\n    }\n    // Call the API to reset password with the token and newPassword\n    console.log('Password reset with token:', token, 'New password:', newPassword);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Reset Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => e.preventDefault(),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"newPassword\",\n          children: \"New Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"newPassword\",\n          value: newPassword,\n          onChange: e => setNewPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"confirmPassword\",\n          children: \"Confirm Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"confirmPassword\",\n          value: confirmPassword,\n          onChange: e => setConfirmPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: 'red'\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handlePasswordReset,\n        children: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(ResetPassword, \"yNT0Q+aiTzEFHP9UW5ouxVxfTCs=\", false, function () {\n  return [useSearchParams];\n});\n_c = ResetPassword;\nexport default ResetPassword;\nvar _c;\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"names":["React","useState","useEffect","useSearchParams","jsxDEV","_jsxDEV","ResetPassword","_s","token","setToken","newPassword","setNewPassword","confirmPassword","setConfirmPassword","error","setError","searchParams","tokenFromURL","get","handlePasswordReset","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","e","preventDefault","htmlFor","type","id","value","onChange","target","style","color","onClick","_c","$RefreshReg$"],"sources":["C:/Users/kalth/OneDrive/Desktop/clothing brand/FRONTEND/src/Components/account/ResetPassword/ResetPassword.jsx"],"sourcesContent":["// src/Components/account/ResetPassword/ResetPassword.jsx\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useSearchParams } from 'react-router-dom';\r\n\r\nconst ResetPassword = () => {\r\n  const [token, setToken] = useState('');\r\n  const [newPassword, setNewPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [error, setError] = useState(null);\r\n  const [searchParams] = useSearchParams();\r\n\r\n  useEffect(() => {\r\n    const tokenFromURL = searchParams.get('token');\r\n    if (tokenFromURL) {\r\n      setToken(tokenFromURL);\r\n    }\r\n  }, [searchParams]);\r\n\r\n  const handlePasswordReset = () => {\r\n    if (newPassword !== confirmPassword) {\r\n      setError('Passwords do not match');\r\n      return;\r\n    }\r\n    // Call the API to reset password with the token and newPassword\r\n    console.log('Password reset with token:', token, 'New password:', newPassword);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Reset Password</h2>\r\n      <form onSubmit={(e) => e.preventDefault()}>\r\n        <div>\r\n          <label htmlFor=\"newPassword\">New Password:</label>\r\n          <input\r\n            type=\"password\"\r\n            id=\"newPassword\"\r\n            value={newPassword}\r\n            onChange={(e) => setNewPassword(e.target.value)}\r\n          />\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"confirmPassword\">Confirm Password:</label>\r\n          <input\r\n            type=\"password\"\r\n            id=\"confirmPassword\"\r\n            value={confirmPassword}\r\n            onChange={(e) => setConfirmPassword(e.target.value)}\r\n          />\r\n        </div>\r\n        {error && <p style={{ color: 'red' }}>{error}</p>}\r\n        <button onClick={handlePasswordReset}>Reset Password</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResetPassword;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}