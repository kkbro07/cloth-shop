{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kalth\\\\OneDrive\\\\Desktop\\\\clothing brand\\\\FRONTEND\\\\src\\\\Components\\\\account\\\\Registration\\\\Registration.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport { gsap } from 'gsap';\nimport { useNavigate } from 'react-router-dom';\nimport './Registration.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Registration = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    firstName: '',\n    lastName: '',\n    email: '',\n    password: ''\n  });\n  const [showPassword, setShowPassword] = useState(false);\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const [formErrors, setFormErrors] = useState({});\n  const [otp, setOtp] = useState('');\n  const [otpSent, setOtpSent] = useState(false); // Track OTP status\n  const [isVerifyingOtp, setIsVerifyingOtp] = useState(false);\n  const formRef = useRef(null);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const elements = formRef.current.querySelectorAll('.animate');\n    gsap.fromTo(elements, {\n      x: () => `${Math.random() * 200 - 100}px`,\n      y: () => `${Math.random() * 200 - 100}px`,\n      opacity: 0\n    }, {\n      x: 0,\n      y: 0,\n      opacity: 1,\n      duration: 0.5,\n      stagger: 0.1\n    });\n  }, []);\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n    setFormErrors({\n      ...formErrors,\n      [name]: ''\n    }); // Clear error on change\n  };\n  const validateForm = () => {\n    const errors = {};\n    const {\n      firstName,\n      lastName,\n      email,\n      password\n    } = formData;\n    if (!firstName.trim()) {\n      errors.firstName = 'First name is required.';\n    }\n    if (!lastName.trim()) {\n      errors.lastName = 'Last name is required.';\n    }\n    const emailPattern = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    if (!email.trim()) {\n      errors.email = 'Email is required.';\n    } else if (!emailPattern.test(email)) {\n      errors.email = 'Invalid email format.';\n    }\n    if (!password.trim()) {\n      errors.password = 'Password is required.';\n    } else if (password.length < 8) {\n      errors.password = 'Password must be at least 8 characters long.';\n    } else if (!/[A-Z]/.test(password)) {\n      errors.password = 'Password must contain at least one uppercase letter.';\n    } else if (!/[a-z]/.test(password)) {\n      errors.password = 'Password must contain at least one lowercase letter.';\n    } else if (!/[0-9]/.test(password)) {\n      errors.password = 'Password must contain at least one number.';\n    }\n    return errors;\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError('');\n    setSuccess('');\n    const validationErrors = validateForm();\n    if (Object.keys(validationErrors).length > 0) {\n      setFormErrors(validationErrors);\n      return;\n    }\n    try {\n      const response = await axios.post('http://localhost:5000/auth/register', formData);\n      setOtpSent(true);\n      setSuccess('OTP sent to your email. Please verify to complete registration.');\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('Registration error:', error);\n      setError(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'There was an error registering the user!');\n    }\n  };\n  const handleVerifyOtp = async e => {\n    e.preventDefault();\n    setError('');\n    setSuccess('');\n    setIsVerifyingOtp(true);\n    try {\n      await axios.post('http://localhost:5000/auth/verify-otp', {\n        email: formData.email,\n        otp\n      });\n      setSuccess('Registration successful! Please login.');\n      setTimeout(() => {\n        navigate('/login');\n      }, 2000);\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      console.error('OTP verification error:', error);\n      setError(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Invalid OTP.');\n    } finally {\n      setIsVerifyingOtp(false);\n    }\n  };\n  const togglePasswordVisibility = () => {\n    setShowPassword(!showPassword);\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"reg-container\",\n      ref: formRef,\n      children: [!otpSent ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Verify OTP\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleVerifyOtp,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Enter OTP\",\n            value: otp,\n            onChange: e => setOtp(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            disabled: isVerifyingOtp,\n            children: isVerifyingOtp ? 'Verifying...' : 'Verify OTP'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 19\n      }, this), success && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"success-message\",\n        children: success\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 5\n  }, this);\n};\n_s(Registration, \"YkzBFjqX53doCkHyE8sIN6q8rnY=\", false, function () {\n  return [useNavigate];\n});\n_c = Registration;\nexport default Registration;\nvar _c;\n$RefreshReg$(_c, \"Registration\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","gsap","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","Registration","_s","formData","setFormData","firstName","lastName","email","password","showPassword","setShowPassword","error","setError","success","setSuccess","formErrors","setFormErrors","otp","setOtp","otpSent","setOtpSent","isVerifyingOtp","setIsVerifyingOtp","formRef","navigate","elements","current","querySelectorAll","fromTo","x","Math","random","y","opacity","duration","stagger","handleChange","e","name","value","target","validateForm","errors","trim","emailPattern","test","length","handleSubmit","preventDefault","validationErrors","Object","keys","response","post","_error$response","_error$response$data","console","data","message","handleVerifyOtp","setTimeout","_error$response2","_error$response2$data","togglePasswordVisibility","children","className","ref","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","onChange","required","disabled","_c","$RefreshReg$"],"sources":["C:/Users/kalth/OneDrive/Desktop/clothing brand/FRONTEND/src/Components/account/Registration/Registration.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport axios from 'axios';\r\nimport { gsap } from 'gsap';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './Registration.css';\r\n\r\nconst Registration = () => {\r\n  const [formData, setFormData] = useState({\r\n    firstName: '',\r\n    lastName: '',\r\n    email: '',\r\n    password: '',\r\n  });\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [error, setError] = useState('');\r\n  const [success, setSuccess] = useState('');\r\n  const [formErrors, setFormErrors] = useState({});\r\n  const [otp, setOtp] = useState('');\r\n  const [otpSent, setOtpSent] = useState(false); // Track OTP status\r\n  const [isVerifyingOtp, setIsVerifyingOtp] = useState(false);\r\n  const formRef = useRef(null);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const elements = formRef.current.querySelectorAll('.animate');\r\n    gsap.fromTo(\r\n      elements,\r\n      {\r\n        x: () => `${Math.random() * 200 - 100}px`,\r\n        y: () => `${Math.random() * 200 - 100}px`,\r\n        opacity: 0,\r\n      },\r\n      { x: 0, y: 0, opacity: 1, duration: 0.5, stagger: 0.1 }\r\n    );\r\n  }, []);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({\r\n      ...formData,\r\n      [name]: value,\r\n    });\r\n    setFormErrors({ ...formErrors, [name]: '' }); // Clear error on change\r\n  };\r\n\r\n  const validateForm = () => {\r\n    const errors = {};\r\n    const { firstName, lastName, email, password } = formData;\r\n\r\n    if (!firstName.trim()) {\r\n      errors.firstName = 'First name is required.';\r\n    }\r\n\r\n    if (!lastName.trim()) {\r\n      errors.lastName = 'Last name is required.';\r\n    }\r\n\r\n    const emailPattern = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n    if (!email.trim()) {\r\n      errors.email = 'Email is required.';\r\n    } else if (!emailPattern.test(email)) {\r\n      errors.email = 'Invalid email format.';\r\n    }\r\n\r\n    if (!password.trim()) {\r\n      errors.password = 'Password is required.';\r\n    } else if (password.length < 8) {\r\n      errors.password = 'Password must be at least 8 characters long.';\r\n    } else if (!/[A-Z]/.test(password)) {\r\n      errors.password = 'Password must contain at least one uppercase letter.';\r\n    } else if (!/[a-z]/.test(password)) {\r\n      errors.password = 'Password must contain at least one lowercase letter.';\r\n    } else if (!/[0-9]/.test(password)) {\r\n      errors.password = 'Password must contain at least one number.';\r\n    }\r\n\r\n    return errors;\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setError('');\r\n    setSuccess('');\r\n\r\n    const validationErrors = validateForm();\r\n    if (Object.keys(validationErrors).length > 0) {\r\n      setFormErrors(validationErrors);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await axios.post('http://localhost:5000/auth/register', formData);\r\n      setOtpSent(true);\r\n      setSuccess('OTP sent to your email. Please verify to complete registration.');\r\n    } catch (error) {\r\n      console.error('Registration error:', error);\r\n      setError(error.response?.data?.message || 'There was an error registering the user!');\r\n    }\r\n  };\r\n\r\n  const handleVerifyOtp = async (e) => {\r\n    e.preventDefault();\r\n    setError('');\r\n    setSuccess('');\r\n    setIsVerifyingOtp(true);\r\n\r\n    try {\r\n      await axios.post('http://localhost:5000/auth/verify-otp', { email: formData.email, otp });\r\n      setSuccess('Registration successful! Please login.');\r\n      setTimeout(() => {\r\n        navigate('/login');\r\n      }, 2000);\r\n    } catch (error) {\r\n      console.error('OTP verification error:', error);\r\n      setError(error.response?.data?.message || 'Invalid OTP.');\r\n    } finally {\r\n      setIsVerifyingOtp(false);\r\n    }\r\n  };\r\n\r\n  const togglePasswordVisibility = () => {\r\n    setShowPassword(!showPassword);\r\n  };\r\n\r\n  return (\r\n    <section>\r\n      <div className=\"reg-container\" ref={formRef}>\r\n        {!otpSent ? (\r\n          <>\r\n            <h1>Register</h1>\r\n            <form onSubmit={handleSubmit}>\r\n              {/* Form Fields */}\r\n              <button type=\"submit\">Register</button>\r\n            </form>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <h1>Verify OTP</h1>\r\n            <form onSubmit={handleVerifyOtp}>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Enter OTP\"\r\n                value={otp}\r\n                onChange={(e) => setOtp(e.target.value)}\r\n                required\r\n              />\r\n              <button type=\"submit\" disabled={isVerifyingOtp}>\r\n                {isVerifyingOtp ? 'Verifying...' : 'Verify OTP'}\r\n              </button>\r\n            </form>\r\n          </>\r\n        )}\r\n        {error && <div className=\"error-message\">{error}</div>}\r\n        {success && <div className=\"success-message\">{success}</div>}\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Registration;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}